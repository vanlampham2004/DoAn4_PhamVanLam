# pages/base_page.py

from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.remote.webdriver import WebDriver
from selenium.webdriver.common.by import By 
from selenium.common.exceptions import TimeoutException

class BasePage:
    
    def __init__(self, driver: WebDriver):
        """H√†m kh·ªüi t·∫°o, thi·∫øt l·∫≠p WebDriver v√† URL c∆° s·ªü."""
        self.driver = driver
        self.base_url = "https://viettien.vn/" 
    
    def go_to_url(self, url=""):
        """ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn URL."""
        full_url = self.base_url + url
        self.driver.get(full_url)
        # T√πy ch·ªçn: Ch·ªù trang t·∫£i ho√†n to√†n (ho·∫∑c ch·ªù body xu·∫•t hi·ªán)
        WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, 'body')))

    def find_element(self, by_locator, timeout=10):
        """T√¨m v√† ch·ªù ph·∫ßn t·ª≠ c√≥ m·∫∑t trong DOM (Presence)."""
        return WebDriverWait(self.driver, timeout).until(EC.presence_of_element_located(by_locator))

    def click(self, by_locator):
        """Ch·ªù ph·∫ßn t·ª≠ c√≥ th·ªÉ click ƒë∆∞·ª£c v√† th·ª±c hi·ªán click."""
        element = WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable(by_locator))
        element.click()

    def send_keys(self, by_locator, text):
        """ƒêi·ªÅn gi√° tr·ªã v√†o ph·∫ßn t·ª≠."""
        element = self.find_element(by_locator)
        element.clear()
        element.send_keys(text)

    # üí° PH∆Ø∆†NG TH·ª®C G√ÇY L·ªñI TR∆Ø·ªöC ƒê√ì - ƒê√É ƒê·ªäNH NGHƒ®A
    def get_text(self, by_locator):
        """L·∫•y vƒÉn b·∫£n t·ª´ ph·∫ßn t·ª≠ sau khi ch·ªù n√≥ hi·ªÉn th·ªã."""
        return self.find_element(by_locator).text 

    # üí° PH∆Ø∆†NG TH·ª®C G√ÇY L·ªñI TR∆Ø·ªöC ƒê√ì - ƒê√É ƒê·ªäNH NGHƒ®A
    def is_element_present(self, by_locator, timeout=5) -> bool:
        """Ki·ªÉm tra xem ph·∫ßn t·ª≠ c√≥ hi·ªÉn th·ªã/c√≥ m·∫∑t trong DOM hay kh√¥ng (tr·∫£ v·ªÅ True/False)."""
        try:
            self.find_element(by_locator, timeout=timeout)
            return True
        except TimeoutException:
            return False
        except Exception:
            return False